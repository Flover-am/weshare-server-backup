# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

#default:
#  image: maven:3.9.5-eclipse-temurin-17-focal

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  # image: maven:3.9.5-eclipse-temurin-17-focal
  script:
    - echo "Compiling the code..."
    - echo "building....."
    - source /home/runner2/.bashrc
    - tree /lib/maven
    - export MAVEN_HOME=/lib/maven/apache-maven-3.9.6
    - export PATH=${MAVEN_HOME}/bin:${PATH}
    - mvn -B -D maven.test.skip clean package
    - echo "Compile complete."

  artifacts:
    untracked: true
  allow_failure: true
variables:
  GIT_CLEAN_FLAGS: -ffdx -e target/

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no target/weshare-0.0.2.jar root@$SERVER_IP:~
    - sshpass -p "$SERVER_PASSWORD" scp -o StrictHostKeyChecking=no Dockerfile_deploy root@$SERVER_IP:~
    - sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP "docker build -f Dockerfile_deploy -t weshare:0.0.2 .;docker stop weshare_deploy;docker rm -f weshare_deploy;docker run --name weshare_deploy -itd -p 997:9090 weshare:0.0.2"
    - echo "Application successfully deployed."
#